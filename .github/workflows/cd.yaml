name: Continuous Deployment

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.changesets.outputs.hasChangesets == 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Create Version PR or Github Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}

      - name: Set Release Version
        if: steps.changesets.outputs.published == 'true'
        id: get-version
        run: echo "version=${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}" >> $GITHUB_OUTPUT

  run-ci:
    needs: create-release
    if: needs.create-release.outputs.should_deploy == 'true'
    uses: ./.github/workflows/test.yaml
    secrets: inherit

  deploy-to-development:
    permissions:
      pull-requests: write
      id-token: write
    needs: run-ci
    uses: ./.github/workflows/deploy.yaml
    secrets: inherit
    with:
      aws-env: ${{ vars.AWS_EB_DEV_ENV}}
      github-env: 'dev'

  deploy-to-production:
    permissions:
      pull-requests: write
      id-token: write
    needs: run-ci
    uses: ./.github/workflows/deploy.yaml
    secrets: inherit
    with:
      aws-env: ${{ vars.AWS_EB_PROD_ENV}}
      github-env: 'prod'
